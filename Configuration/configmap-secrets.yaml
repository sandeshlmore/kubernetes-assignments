# Create a configmap cm-one with key name and 
# set environment variable envname in a pod with value to the value that is set in configmap (cm-one) for key name.
# Create a secret and set all the key value pairs of the secret as environment variable into a pod


apiVersion: v1
kind: ConfigMap
metadata:
  name: cm-one
data:
  # property-like keys; each key maps to a simple value
  name: "john"

---

apiVersion: v1
data:
  key1: dmFsMQ==
kind: Secret
metadata:
  creationTimestamp: null
  name: secrets


---
apiVersion: v1
kind: Pod
metadata:
  name: configmap-demo-pod
spec:
  containers:
    - name: configmap-demo
      image: nginx
      env:
        # Define the environment variable
        - name: envname 
          valueFrom:
            configMapKeyRef:
              name: cm-one          
              key: name 
      envFrom:
      - secretRef:
          name: secrets
      volumeMounts:
      - name: foo
        mountPath: "/etc/foo"
        readOnly: true
  volumes:
  - name: foo
    secret:
      secretName: mysec2
    


# Create a secret from literal and from file to 
# check if in which cases values are encoded and in which case they are not.

# kubectl create secret generic mysec2 --from-file=secfile.txt
# kubectl create secret generic mysec2 --from-literal=key1=val1
# here from-file stores secret in plain text form whereas from stores

